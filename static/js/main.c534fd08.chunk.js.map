{"version":3,"sources":["logo.svg","components/home/styles/home.js","commonStyles/logo.js","components/home/index.js","components/rulesModal/styles/rulesModal.js","components/rulesModal/index.js","components/gameSelection/styles/gameSelection.js","components/gameSelection/index.js","components/gamePlay/styles/gamePlay.js","components/gamePlay/index.js","components/modal/styles/modal.js","components/modal/index.js","components/quitRevealModal/styles/quitRevealModal.js","components/quitRevealModal/index.js","components/userInputModal/styles/userInputModal.js","components/userInputModal/index.js","components/wonLostModal/styles/wonLost.js","components/wonLostModal/index.js","gameLogic.js","containers/gamePlay.js","helpers/constants.js","helpers/gameTypes.js","containers/gameSelection.js","containers/home.js","containers/quitRevealModal.js","containers/rulesModal.js","containers/userInputModal.js","containers/wonLostModal.js","App.js","global-styles.js","index.js"],"names":["module","exports","Container","styled","div","Frame","WordContainer","ButtonContainer","Button","button","ButtonLink","a","MainText","h1","Subtitle","p","HomePageLogo","img","RulesPageLogo","GameSelectionPageLogo","GamePlayPageLogo","QuitPageLogo","UserInputModalLogo","Home","children","restProps","Logo","btnText","setShowRulesModal","showRulesModal","path","onClick","Overlay","Content","InfoText","SubText","ExampleContainer","RulesModal","ReactDOM","createPortal","document","body","play","SelectLabel","label","column","SelectButton","input","flexDirection","confirm","shrinkable","GameSelection","difficulty","display","margin","alignItems","justifyContent","extraWidthRight","AttemptsContainer","AttemptWrapper","AttemptNumber","AttemptResult","h2","LettersContainer","LetterContainer","gameOver","cow","bull","lineHeight","marginTop","fontSize","reveal","quit","guess","GamePlay","Modal","h3","QuitRevealModal","error","marginLeft","color","LettersLeft","UserInputModal","Input","result","WonLostModal","GameLogic","hiddenWord","guessedWord","hidden","guessed","forEach","hiddenLetter","hiddenIndex","guessedLetter","guessedInex","GamePlayContainer","useContext","GameContext","hintLetters","setHintLetters","setGameOver","attempts","attemptsPlayed","gameType","level","letters","setWonTheGame","setShowQuitRevealModal","setShowRevealModal","setShowUserInputModal","setShowWonLostModal","myChoices","newGame","history","useHistory","useEffect","window","location","reload","length","console","log","checkAgainst","toUpperCase","Number","src","logo","alt","style","fontWeight","background","opacity","borderRadius","userSelect","textShadow","map","myChoice","index","key","letter","e","innerText","includes","newHintLetters","filter","hintLetter","prevHintLetters","letterClickedHandler","target","backgroundColor","push","localStorage","setObj","disabled","gameTypes","3","easy","medium","hard","4","5","6","GameSelectionContainer","setLevel","setLetters","setAttempts","setAttemptsPlayed","setHiddenWord","useState","levelSelected","setLevelSelected","lettersSelected","setLettersSelected","randomWords","require","noRepeatedLetters","word","setItem","getItem","stringLength","pickRandom","Math","floor","random","numbers","Array","apply","join","onChange","value","type","id","name","htmlFor","attemptsGetter","toLowerCase","goBack","HomeContainer","setGameType","setNewGame","gameHandler","game","QuitRevealModalContainer","showRevealModal","showQuitRevealModal","revealIt","setRevealIt","visibility","RulesModalContainer","textDecoration","Radium","isInValidWord","setIsInValidWord","wordExistError","setWordExistError","inputDuplicatesError","setInputDuplicateError","userInput","setUserInput","setMyChoices","inputRef","useRef","letterCount","setLetterCount","hasDuplicates","array","Set","size","myChoiceHandler","rword","words","getObj","current","focus","ref","width","outline","padding","border","letterSpacing","textTransform","maxLength","onKeyPress","event","keyCode","which","WonLostModalContainer","wonTheGame","aria-label","role","createContext","Storage","prototype","obj","this","JSON","stringify","parse","App","showUserInputModal","showWonLostModal","contextValues","Provider","exact","component","GlobalStyles","createGlobalStyle","render","getElementById"],"mappings":"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","file":"static/js/main.c534fd08.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.956ab9b4.svg\";","import styled from \"styled-components/macro\";\n\nexport const Container = styled.div`\n  margin: auto;\n`;\n\nexport const Frame = styled.div`\n  display: flex;\n  flex-direction: row;\n`;\n\nexport const WordContainer = styled.div`\n  margin-top: 2%;\n  margin-left: 28%;\n`;\n\nexport const ButtonContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: auto;\n  max-width: 400px;\n  margin-top: 200px;\n  @media (max-width: 1100px) {\n    margin-top: 150px;\n  }\n`;\n\nexport const Button = styled.button`\n  width: 400px;\n  padding: 30px;\n  border-radius: 50px;\n  margin: auto;\n  margin-bottom: 80px;\n  background-color: #394867;\n  color: #fcfffc;\n  font-size: 20px;\n  font-weight: 500;\n  letter-spacing: 1px;\n  border: none;\n  cursor: pointer;\n  outline: none;\n  &:hover {\n    background-color: #ffa62b;\n    font-weight: 700;\n    font-size: 22px;\n    letter-spacing: 0px;\n    transition: background-color 0.3s;\n  }\n\n  @media (max-width: 1100px) {\n    font-size: 15px;\n    width: 200px;\n    padding: 20px;\n    margin-bottom: 50px;\n    &:hover {\n      font-weight: 500;\n      font-size: 18px;\n    }\n  }\n`;\nexport const ButtonLink = styled.a`\n  color: #fcfffc;\n  margin: auto;\n  text-transform: uppercase;\n  /* background-color: transparent; */\n  cursor: pointer;\n  &:hover {\n    font-weight: 700;\n    color: #ffa62b;\n    font-size: 19px;\n  }\n  @media (max-width: 1100px) {\n    font-size: 14px;\n  }\n`;\nexport const MainText = styled.h1`\n  font-size: 3em;\n  color: white;\n  &:before {\n    content: \"Cow\";\n    color: #ffa62b;\n  }\n  @media (max-width: 1100px) {\n    font-size: 2em;\n    margin-left: -70px;\n    margin-top: 30px;\n  }\n`;\nexport const Subtitle = styled.p`\n  color: white;\n  margin-left: 15%;\n  margin-top: -20px;\n  font-style: italic;\n  @media (max-width: 1100px) {\n    margin-top: -15px;\n    margin-left: -70px;\n  }\n`;\n","import styled from \"styled-components/macro\";\n\nexport const HomePageLogo = styled.img`\n  border: 0;\n  max-width: 700px;\n  width: 150px;\n  cursor: pointer;\n  padding: 0;\n  margin-left: 7em;\n  margin-top: 2em;\n  @media (max-width: 1100px) {\n    max-width: 300px;\n    width: 70px;\n    margin-left: 1em;\n    margin-top: 1.5em;\n  }\n`;\n\nexport const RulesPageLogo = styled(HomePageLogo)`\n  max-width: 300px;\n  width: 100px;\n  margin-left: 3em;\n  @media (max-width: 1100px) {\n    max-width: 300px;\n    width: 70px;\n    margin-left: 1em;\n  }\n`;\n\nexport const GameSelectionPageLogo = styled(RulesPageLogo)`\n  @media (max-width: 700px) {\n    max-width: 300px;\n    width: 70px;\n    margin-left: 1em;\n    margin-top: 5px;\n  }\n`;\n\nexport const GamePlayPageLogo = styled(GameSelectionPageLogo)`\n  margin-right: 2%;\n  @media (max-width: 700px) {\n    margin-top: 3px;\n    display: none;\n  }\n`;\n\nexport const QuitPageLogo = styled(GameSelectionPageLogo)`\n  @media (max-width: 700px) {\n    margin-top: 3px;\n    display: none;\n  }\n`;\n\nexport const UserInputModalLogo = styled(GamePlayPageLogo)``;\n","import React from \"react\";\nimport {\n  Container,\n  WordContainer,\n  ButtonContainer,\n  Frame,\n  MainText,\n  Subtitle,\n  Button,\n  ButtonLink,\n} from \"./styles/home\";\n\nimport { HomePageLogo as Logo } from \"../../commonStyles/logo\";\n\nexport default function Home({ children, ...restProps }) {\n  return <Container {...restProps}>{children}</Container>;\n}\n\nHome.Frame = function HomeFrame({ children, ...restProps }) {\n  return <Frame {...restProps}>{children}</Frame>;\n};\n\nHome.WordContainer = function HomeWordContainer({ children, ...restProps }) {\n  return <WordContainer {...restProps}>{children}</WordContainer>;\n};\n\nHome.ButtonContainer = function HomeButtonContainer({\n  children,\n  ...restProps\n}) {\n  return <ButtonContainer {...restProps}>{children}</ButtonContainer>;\n};\n\nHome.Logo = function HomeLogo({ ...restProps }) {\n  return <Logo {...restProps} />;\n};\n\nHome.MainText = function HomeMainText({ children, ...restProps }) {\n  return <MainText {...restProps}>{children}</MainText>;\n};\n\nHome.Subtitle = function HomeSubtitle({ children, ...restProps }) {\n  return <Subtitle {...restProps}>{children}</Subtitle>;\n};\n\nHome.Button = function HomeButton({ children, btnText, ...restProps }) {\n  return (\n    <Button btnText={btnText} {...restProps}>\n      {children}\n    </Button>\n  );\n};\n\nHome.ButtonLink = function HomeButtonLink({\n  children,\n  showRulesModal,\n  setShowRulesModal,\n  path,\n  btnText,\n  ...restProps\n}) {\n  return (\n    <ButtonLink\n      onClick={() => setShowRulesModal(true)}\n      path={path}\n      {...restProps}\n    >\n      {children}\n    </ButtonLink>\n  );\n};\n","import styled from \"styled-components/macro\";\n\nexport const Container = styled.div`\n  width: 70%;\n  height: 70%;\n  background-color: #14274e;\n  z-index: 1000;\n  position: fixed;\n  top: 10%;\n  left: 15%;\n  right: 20%;\n  bottom: 20%;\n  box-sizing: border-box;\n  box-shadow: 1px 1px white;\n  @media (max-width: 1100px) {\n    overflow: scroll;\n    width: 100%;\n    height: 80%;\n    top: 5%;\n    left: 2%;\n    right: 2%;\n    bottom: 20%;\n    box-shadow: 0px 0px transparent;\n  }\n`;\n\nexport const Frame = styled.div`\n  display: flex;\n  flex-direction: row;\n`;\n\n// the black shade that falls when modal opens\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.7);\n  z-index: 1000;\n`;\n\nexport const Content = styled.div`\n  /* width: 70%;\n  height: 70%;\n  background-color: #14274e;\n  z-index: 1000;\n  position: fixed;\n  top: 10%;\n  left: 15%;\n  right: 20%;\n  bottom: 20%;\n  box-sizing: border-box;\n  box-shadow: 1px 1px white;\n  @media (max-width: 1100px) {\n    overflow: scroll;\n    width: 100%;\n    height: 80%;\n    top: 5%;\n    left: 2%;\n    right: 2%;\n    bottom: 20%;\n    box-shadow: 0px 0px transparent;\n  } */\n`;\n\nexport const MainText = styled.h1`\n  font-size: 2em;\n  color: white;\n  margin-top: 5%;\n  margin-left: 28%;\n\n  @media (max-width: 1100px) {\n    font-size: 1em;\n    margin-left: 15%;\n    margin-top: 15%;\n  }\n`;\n\nexport const InfoText = styled.p`\n  color: white;\n  letter-spacing: 1px;\n  margin-left: 4%;\n  font-size: 1em;\n  line-height: 1.6;\n  @media (max-width: 1100px) {\n    font-size: 0.8em;\n    margin-left: 7%;\n    margin-right: 7%;\n    line-height: 1.9;\n    letter-spacing: 1px;\n  }\n`;\n\nexport const SubText = styled.p`\n  color: white;\n  letter-spacing: 1px;\n  /* margin-left: 4%; */\n  font-size: 1em;\n  @media (max-width: 1100px) {\n    font-size: 0.8em;\n    margin-left: 7%;\n    margin-right: 7%;\n\n    line-height: 1.9;\n  }\n`;\nexport const WordContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  @media (max-width: 1100px) {\n    flex-direction: column;\n  }\n`;\n\nexport const ExampleContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  /* align-items: center; */\n  margin-top: 4%;\n`;\n\nexport const Button = styled.button`\n  width: 100px;\n  padding: 10px;\n  border-radius: 50px;\n  margin-top: 2%;\n  margin-left: 45%;\n  margin-bottom: 20%;\n  background-color: #394867;\n  color: #fcfffc;\n  font-size: 20px;\n  font-weight: 500;\n  letter-spacing: 1px;\n  border: none;\n\n  cursor: pointer;\n  outline: none;\n  &:hover {\n    background-color: #e6a347;\n    font-weight: 700;\n    font-size: 22px;\n    letter-spacing: 0px;\n    transition: background-color 0.3s;\n  }\n  @media (max-width: 1100px) {\n    margin-bottom: 10%;\n    margin-left: 33%;\n    margin-top: 8%;\n  }\n`;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {\n  Container,\n  Overlay,\n  Content,\n  Frame,\n  MainText,\n  InfoText,\n  SubText,\n  WordContainer,\n  ExampleContainer,\n  Button,\n} from \"./styles/rulesModal\";\nimport { RulesPageLogo } from \"../../commonStyles/logo\";\n\nexport default function RulesModal({ children, ...restProps }) {\n  return ReactDOM.createPortal(\n    <Container {...restProps}>{children}</Container>,\n    document.body\n  );\n}\n\nRulesModal.Overlay = function RulesModalOverlay({ children, ...restProps }) {\n  return <Overlay {...restProps}>{children}</Overlay>;\n};\n\nRulesModal.Frame = function RulesModalFrame({ children, ...restProps }) {\n  return <Frame {...restProps}>{children}</Frame>;\n};\n\nRulesModal.Logo = function RulesModalLogo({ ...restProps }) {\n  return <RulesPageLogo {...restProps} />;\n};\n\nRulesModal.Content = function RulesModalContent({ children, ...restProps }) {\n  return <Content {...restProps}>{children}</Content>;\n};\n\nRulesModal.MainText = function RulesModalMainText({ children, ...restProps }) {\n  return <MainText {...restProps}>{children}</MainText>;\n};\n\nRulesModal.InfoText = function RulesIModalnfoText({ children, ...restProps }) {\n  return <InfoText {...restProps}>{children}</InfoText>;\n};\n\nRulesModal.SubText = function RulesModalSubText({ children, ...restProps }) {\n  return <SubText {...restProps}>{children}</SubText>;\n};\n\nRulesModal.WordContainer = function RulesModalWordContainer({\n  children,\n  ...restProps\n}) {\n  return <WordContainer {...restProps}>{children}</WordContainer>;\n};\n\nRulesModal.ExampleContainer = function RulesModalExampleContainer({\n  children,\n  ...restProps\n}) {\n  return <ExampleContainer {...restProps}>{children}</ExampleContainer>;\n};\n\nRulesModal.Button = function RulesModalButton({\n  children,\n  btnText,\n  ...restProps\n}) {\n  return (\n    <Button btnText={btnText} {...restProps}>\n      {children}\n    </Button>\n  );\n};\n","import styled from \"styled-components/macro\";\n\nexport const Container = styled.div`\n  /* margin: auto; */\n`;\n\nexport const Frame = styled.div`\n  display: flex;\n  flex-direction: row;\n`;\n\nexport const Button = styled.button`\n  width: ${({ play }) => (play ? \"300px\" : \"200px\")};\n  padding: 25px;\n  border-radius: 50px;\n  margin-left: auto;\n  background-color: #394867;\n  color: #fcfffc;\n  font-size: ${({ play }) => play && \"19px\"};\n  font-weight: ${({ play }) => play && \"700\"};\n  letter-spacing: 1px;\n  border: none;\n  cursor: pointer;\n  outline: none;\n  &:disabled {\n    background-color: #9ba4b4;\n  }\n  &:hover {\n    background-color: #e6a347;\n    background-color: #ffa62b;\n\n    font-weight: 500;\n    letter-spacing: ${({ play }) => play && \"10px\"};\n    transition: background-color all 0.3s;\n  }\n\n  @media (max-width: 1100px) {\n    font-size: 15px;\n    width: ${({ play }) => (play ? \"200px\" : \"100px\")};\n    padding: 20px;\n    margin-bottom: 10px;\n    margin-right: ${({ play }) => (play ? \"0px\" : \"20px\")};\n\n    &:hover {\n      font-weight: 500;\n      font-size: 18px;\n    }\n  }\n`;\n\nexport const SelectLabel = styled.label`\n  width: 150px;\n  /* margin-left: ${({ column }) => (column ? \"30px\" : null)}; */\n  padding: 17px;\n  text-align: center;\n  border-radius: 50px;\n  background-color: #394867;\n  color: #fcfffc;\n  font-size: 18px;\n  font-weight: 500;\n  letter-spacing: 1px;\n  border: none;\n  cursor: pointer;\n  outline: none;\n\n  &:hover {\n    background-color: #e6a347;\n    background-color: #ffa62b;\n    font-weight: 700;\n    transition: background-color 0.3s;\n    border: none;\n  }\n\n  @media (max-width: 1100px) {\n    font-size: 13px;\n    width: 120px;\n    padding: 20px;\n    margin-left: ${({ column }) => (column ? \"30px\" : null)};\n    margin-bottom: ${({ column }) => (column ? \"0px\" : \"15px\")};\n\n    /* margin-bottom: 20px; */\n    &:hover {\n      font-size: 16px;\n      font-weight: 400;\n      border: none;\n      outline: none;\n    }\n  }\n`;\n\nexport const SelectButton = styled.input`\n  opacity: 0;\n\n  &:checked + ${SelectLabel} {\n    background-color: #ffa62b;\n  }\n`;\n\nexport const ButtonContainer = styled.div`\n  /* background-color: green; */\n  display: flex;\n  flex-direction: ${({ flexDirection }) => flexDirection};\n  margin: auto;\n  padding-right: 30px;\n  max-width: fit-content;\n\n  max-width: ${({ confirm }) => (confirm ? \"600px\" : \"fit-content\")};\n  margin-top: ${({ confirm }) => (confirm ? \"200px\" : \"100px\")};\n  padding-right: ${({ confirm }) => confirm && \"0px\"};\n  /* margin-top: 300px; */\n  @media (max-width: 1100px) {\n    /* margin-top: 470px; */\n    margin-top: ${({ shrinkable }) => (shrinkable ? \"10px\" : \"35px\")};\n    margin-top: ${({ confirm }) => confirm && \"60px\"};\n\n    /* background-color: green; */\n    flex-direction: ${({ shrinkable }) => (shrinkable ? \"column\" : \"row\")};\n  }\n`;\n\nexport const MainText = styled.h1`\n  font-size: 2em;\n  color: white;\n  margin-top: 5%;\n  margin-left: 31%;\n\n  @media (max-width: 1000px) {\n    font-size: 2em;\n    margin-left: 20%;\n    margin-top: 5%;\n  }\n\n  @media (max-width: 700px) {\n    font-size: 1em;\n    margin-left: 8%;\n    margin-top: 8%;\n  }\n`;\n","import React from \"react\";\nimport { GameSelectionPageLogo } from \"../../commonStyles/logo\";\nimport {\n  Container,\n  Frame,\n  MainText,\n  SelectButton,\n  SelectLabel,\n  ButtonContainer,\n  Button,\n} from \"./styles/gameSelection\";\n\nexport default function GameSelection({ children, ...restProps }) {\n  return <Container {...restProps}>{children}</Container>;\n}\n\nGameSelection.Logo = function GameSelectionLogo({ ...restProps }) {\n  return <GameSelectionPageLogo {...restProps} />;\n};\n\nGameSelection.Frame = function GamSelectionFrame({ children, ...restProps }) {\n  return <Frame {...restProps}>{children}</Frame>;\n};\n\nGameSelection.MainText = function GameSelectionMainText({\n  children,\n  ...restProps\n}) {\n  return <MainText {...restProps}>{children}</MainText>;\n};\n\nGameSelection.Button = function GameSelectionButton({ btnText, ...restProps }) {\n  return <Button btnText={btnText} {...restProps} />;\n};\n\n// selectButton is the radio button\n//select lanel is the label\n\nGameSelection.SelectButton = function GameSelectionSelectButton({\n  children,\n  ...restProps\n}) {\n  return (\n    <>\n      <SelectButton {...restProps} />\n    </>\n  );\n};\n\nGameSelection.SelectLabel = function GameSelectionSelectLabel({\n  children,\n  ...restProps\n}) {\n  return <SelectLabel {...restProps}>{children}</SelectLabel>;\n};\n\nGameSelection.ButtonContainer = function HomeButtonContainer({\n  children,\n  ...restProps\n}) {\n  return <ButtonContainer {...restProps}>{children}</ButtonContainer>;\n};\n","import styled from \"styled-components/macro\";\n\nexport const Container = styled.div``;\n\nexport const Frame = styled.div`\n  display: flex;\n  flex-direction: row;\n  /* background-color: yellow; */\n`;\n\nexport const MainText = styled.h1`\n  font-size: 2em;\n  color: white;\n  margin-top: 3%;\n  margin-left: 20%;\n\n  @media (max-width: 1000px) {\n    font-size: 2em;\n    margin-left: 20%;\n    margin-top: 5%;\n  }\n\n  @media (max-width: 700px) {\n    margin-top: 3em;\n    font-size: 1em;\n    margin-left: 2%;\n    letter-spacing: 1px;\n  }\n`;\n\nexport const WordContainer = styled.div`\n  margin-top: 2%;\n  /* background-color: green; */\n  ${({ difficulty }) =>\n    difficulty && {\n      display: \"flex\",\n      flexDirection: \"column\",\n      margin: \"auto\",\n      alignItems: \"right\",\n      justifyContent: \"center\",\n      // height: \"50px\",\n    }}\n\n  // \n\n  @media (max-width: 700px) {\n    margin-top: 0%;\n    /* width: 80%; */\n    width: ${({ extraWidthRight }) => extraWidthRight && \"32%\"};\n  }\n`;\n\nexport const AttemptsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  color: white;\n  /* background: green; */\n  margin: auto;\n  margin-top: 1%;\n  margin-left: 4%;\n  width: 95%;\n  box-sizing: border-box;\n  height: 60vh;\n  flex-wrap: wrap;\n  @media (max-width: 1100px) {\n    /* height: auto; */\n    flex-wrap: nowrap;\n    overflow: scroll;\n    border-right: 1px solid white;\n    margin-top: 2%;\n  }\n`;\n\nexport const AttemptWrapper = styled.div`\n  display: flex;\n  /* justify-content: space-between; */\n  /* background-color: orange; */\n  align-items: center;\n  width: 25%;\n  /* width: fit-content; */\n  margin-top: 2%;\n`;\nexport const AttemptNumber = styled.p`\n  margin-right: 4%;\n  font-weight: 700;\n  font-size: 1.4em;\n  @media (max-width: 700px) {\n    font-size: 1em;\n    margin-right: 2%;\n  }\n`;\n\nexport const AttemptResult = styled.h2`\n  display: flex;\n  justify-content: space-between;\n  width: 3em;\n  /* width: 8em; */\n  /* background-color: black; */\n  color: #ffe05d;\n  /* color: #b8de6f; */\n  font-weight: 700;\n  margin-left: 2%;\n  font-weight: 700;\n  font-size: 1.1em;\n  letter-spacing: 3px;\n  /* background-color: orange; */\n  @media (max-width: 700px) {\n    font-size: 1em;\n  }\n`;\n\nexport const LettersContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-right: 1em;\n  /* background-color: white; */\n  /* margin-left: 2%; */\n\n  /* position: fixed; */\n  @media (max-width: 700px) {\n    margin-right: 3px;\n    margin-left: 2%;\n  }\n`;\n\nexport const LetterContainer = styled.p`\n  color: #fcfffc;\n  border: 0px solid black;\n  padding: 10px;\n  font-size: 1.3em;\n  border-radius: 20%;\n  margin: 0 4%;\n  height: 40%;\n  width: 43px;\n  text-align: center;\n  background-color: #394867;\n  text-transform: uppercase;\n  /* background-color: #9ba4b4; */\n  font-weight: 700;\n  cursor: pointer;\n  @media (max-width: 700px) {\n    margin: 0 3%;\n    font-size: 1em;\n    padding: 6px;\n    width: 35px;\n  }\n`;\n\nexport const SubText = styled.p`\n  margin-top: ${({ gameOver }) => gameOver && \"7em\"};\n  margin-left: ${({ gameOver }) => gameOver && \"-12em\"};\n  margin-left: ${({ cow }) => cow && \"5px\"};\n  color: ${({ gameOver }) => (gameOver ? \"#ffa62b\" : \"white\")};\n  color: ${({ cow }) => cow && \"#b8de6f\"};\n  color: ${({ bull }) => bull && \"#ffe05d\"};\n  font-size: 0.9em;\n\n  /* font-size: ${({ bull }) => bull && \"1.1em\"};\n  font-size: ${({ cow }) => cow && \"1.1em\"}; */\n  /* \n  color: #ffe05d;\n  color: #b8de6f; */\n\n  letter-spacing: 1px;\n  &:before {\n    content: \"Difficulty \";\n    display: ${({ difficulty }) => (difficulty ? \"visible \" : \"none\")};\n  }\n\n  @media (max-width: 1100px) {\n    font-size: 0.8em;\n    margin-left: 5%;\n    margin-right: 7%;\n    line-height: 1.9;\n  }\n  @media (max-width: 700px) {\n    font-size: 0.6em;\n    line-height: normal;\n    /* margin-right: 10%; */\n    ${({ difficulty }) =>\n      difficulty && {\n        lineHeight: \"2em\",\n        marginTop: \"0.3em\",\n        fontSize: \"0.6em\",\n      }}/* &:before {\n      content: \"\";\n      font-size: 0.2em;\n      display: ${({ difficulty }) => (difficulty ? \"visible \" : \"none\")};\n    } */\n  }\n`;\n\nexport const ButtonContainer = styled.div`\n  display: flex;\n  justify-content: space-evenly;\n  /* background-color: orange; */\n  width: 50%;\n  margin: auto;\n  margin-top: 2%;\n  @media (max-width: 700px) {\n    /* flex-direction: column; */\n    /* justify-content: center; */\n    /* align-items: center; */\n    margin-top: 40px;\n    width: 100%;\n  }\n`;\n\nexport const Button = styled.button`\n  width: ${({ reveal }) => reveal && \"200px\"};\n  width: ${({ quit }) => quit && \"100px\"};\n  width: ${({ guess }) => guess && \"400px\"};\n  padding: 20px;\n  border-radius: 50px;\n  background-color: ${({ reveal }) => reveal && \"#B8DE6F\"};\n  background-color: ${({ quit }) => quit && \"#D7385E\"};\n  background-color: ${({ guess }) => guess && \"#394867\"};\n  color: ${({ reveal }) => reveal && \"black\"};\n  color: ${({ quit }) => quit && \"#FCFFFC\"};\n  color: ${({ guess }) => guess && \"#ffa62b\"};\n  border: none;\n  font-size: 1.1em;\n  letter-spacing: 1px;\n  font-weight: 600;\n  cursor: pointer;\n  outline: none;\n  &:disabled {\n    background-color: #9ba4b4;\n    color: white;\n    &:hover {\n      background-color: #9ba4b4;\n      cursor: not-allowed;\n    }\n  }\n  @media (max-width: 1300px) {\n    width: ${({ reveal }) => reveal && \"150px\"};\n    width: ${({ quit }) => quit && \"100px\"};\n    width: ${({ guess }) => guess && \"400px\"};\n    /* display: none; */\n    padding: 10px;\n    margin-bottom: 30px;\n    margin-right: 30px;\n    font-size: 0.8em;\n  }\n\n  @media (max-width: 700px) {\n    width: ${({ reveal }) => reveal && \"150px\"};\n    width: ${({ quit }) => quit && \"100px\"};\n    width: ${({ guess }) => guess && \"400px\"};\n    /* display: none; */\n    padding: 10px;\n    margin-bottom: 30px;\n    font-size: 0.8em;\n  }\n  &:hover {\n    background-color: ${({ guess }) => guess && \"#FFA62B\"};\n    color: ${({ guess }) => guess && \"#FCFFFC\"};\n  }\n`;\n","import React from \"react\";\nimport {\n  Container,\n  Frame,\n  MainText,\n  SubText,\n  WordContainer,\n  AttemptsContainer,\n  AttemptWrapper,\n  AttemptNumber,\n  LettersContainer,\n  LetterContainer,\n  AttemptResult,\n  ButtonContainer,\n  Button,\n} from \"./styles/gamePlay\";\nimport { GamePlayPageLogo as Logo } from \"../../commonStyles/logo\";\n\nexport default function GamePlay({ children, ...restProps }) {\n  return <Container {...restProps}>{children}</Container>;\n}\n\nGamePlay.Frame = function GamePlayFrame({ children, ...restProps }) {\n  return <Frame {...restProps}>{children} </Frame>;\n};\n\nGamePlay.WordContainer = function GamePlayWordContainer({\n  children,\n  ...restProps\n}) {\n  return <WordContainer {...restProps}>{children} </WordContainer>;\n};\n\nGamePlay.MainText = function GamePlayMainText({ children, ...restProps }) {\n  return <MainText {...restProps}>{children} </MainText>;\n};\n\nGamePlay.SubText = function GamePlaySubText({ children, ...restProps }) {\n  return <SubText {...restProps}>{children}</SubText>;\n};\n\nGamePlay.Logo = function GamePlayLogo({ ...restProps }) {\n  return <Logo {...restProps} />;\n};\n\nGamePlay.AttemptsContainer = function GamePlayAttemptsContainer({\n  children,\n  ...restProps\n}) {\n  return <AttemptsContainer {...restProps}>{children} </AttemptsContainer>;\n};\n\nGamePlay.AttemptWrapper = function GamePlayAttemptWrapper({\n  children,\n  ...restProps\n}) {\n  return <AttemptWrapper {...restProps}>{children} </AttemptWrapper>;\n};\n\nGamePlay.AttemptNumber = function GamePlayAttemptNumber({\n  children,\n  ...restProps\n}) {\n  return <AttemptNumber {...restProps}>{children} </AttemptNumber>;\n};\n\nGamePlay.LettersContainer = function GamePlayLettersContainer({\n  children,\n  ...restProps\n}) {\n  return <LettersContainer {...restProps}>{children} </LettersContainer>;\n};\n\nGamePlay.LetterContainer = function GamePlayLetterContainer({\n  children,\n  ...restProps\n}) {\n  return <LetterContainer {...restProps}>{children} </LetterContainer>;\n};\n\nGamePlay.AttemptResult = function GamePlayAttemptResult({\n  children,\n  ...restProps\n}) {\n  return <AttemptResult {...restProps}>{children} </AttemptResult>;\n};\n\nGamePlay.ButtonContainer = function GamePlayButtonContainer({\n  children,\n  ...restProps\n}) {\n  return <ButtonContainer {...restProps}>{children}</ButtonContainer>;\n};\n\nGamePlay.Button = function GamePlayButton({ children, ...restProps }) {\n  return <Button {...restProps}>{children}</Button>;\n};\n","import styled from \"styled-components/macro\";\n\nexport const Container = styled.div``;\n\n// the black shade that falls when modal opens\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.7);\n  z-index: 100;\n`;\n\nexport const Content = styled.div``;\n","import React from \"react\";\nimport { createPortal } from \"react-dom\";\nimport { Container, Overlay, Content } from \"./styles/modal\";\n\nexport default function Modal({ children, ...restProps }) {\n  return createPortal(\n    <Container {...restProps}>{children}</Container>,\n    document.body\n  );\n}\n\n// overlay - black screen that covers the main content and acts as a separator bw main content and the modal\nModal.Overlay = function ModalOverlay({ children, ...restProps }) {\n  return <Overlay {...restProps}>{children}</Overlay>;\n};\n\nModal.Content = function ModalContent({ children, ...restProps }) {\n  return <Content {...restProps}>{children}</Content>;\n};\n","import styled from \"styled-components/macro\";\n\nexport const Container = styled.div`\n  background-color: #14274e;\n  position: fixed;\n  z-index: 1000;\n  top: 25%;\n  left: 25%;\n  right: 25%;\n  bottom: 25%;\n  padding: 1%;\n  box-sizing: border-box;\n  box-shadow: 1px 1px white;\n  @media (max-width: 1100px) {\n    width: 80%;\n    height: 60%;\n    margin: auto;\n    top: 20%;\n    left: 2%;\n    right: 2%;\n  }\n`;\n\nexport const Frame = styled.div`\n  display: flex;\n  flex-direction: row;\n  /* background: orange; */\n`;\n\nexport const MainText = styled.h1`\n  font-size: 1.8em;\n  color: white;\n  margin-top: 8%;\n  margin-left: 10%;\n\n  @media (max-width: 1100px) {\n    font-size: 1em;\n    margin-left: 25%;\n    margin-top: 15%;\n  }\n  @media (max-width: 700px) {\n    font-size: 0.9em;\n    letter-spacing: 0.3px;\n    line-height: 2em;\n    margin-right: 1%;\n    margin-left: 20%;\n    margin-top: 10%;\n  }\n`;\n\nexport const SubText = styled.h3`\n  font-size: 1.5em;\n  color: #ffa62b;\n  position: absolute;\n  top: 35%;\n  left: 45%;\n  letter-spacing: 3px;\n  @media (max-width: 700px) {\n    top: 25%;\n    left: 35%;\n  }\n`;\n\nexport const ButtonContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  margin-top: 5%;\n\n  @media (max-width: 700px) {\n    align-items: center;\n    margin-top: 15%;\n  }\n`;\n\nexport const Button = styled.button`\n  width: 220px;\n  padding: 8px;\n  border-radius: 50px;\n  background-color: #394867;\n  color: #fcfffc;\n  font-size: 20px;\n  font-weight: 500;\n  letter-spacing: 1px;\n  border: none;\n\n  cursor: pointer;\n  outline: none;\n\n  margin-bottom: 6%;\n  margin-left: 33%;\n  margin-top: 4%;\n\n  &:hover {\n    background-color: #e6a347;\n    font-weight: 700;\n    font-size: 22px;\n    letter-spacing: 0px;\n    transition: background-color 0.3s;\n  }\n  @media (max-width: 700px) {\n    width: 170px;\n    margin: auto;\n    margin-bottom: 10%;\n    margin-top: 8%;\n    font-size: 14px;\n  }\n`;\n","import React from \"react\";\nimport {\n  Container,\n  Frame,\n  MainText,\n  ButtonContainer,\n  Button,\n  SubText,\n} from \"./styles/quitRevealModal\";\nimport { QuitPageLogo as Logo } from \"../../commonStyles/logo\";\n\nexport default function QuitRevealModal({ children, ...restProps }) {\n  return <Container {...restProps}>{children}</Container>;\n}\n\nQuitRevealModal.Frame = function QuitRevealModal({ children, ...restProps }) {\n  return <Frame {...restProps}>{children}</Frame>;\n};\n\nQuitRevealModal.Logo = function QuitRevealModal({ ...restProps }) {\n  return <Logo {...restProps} />;\n};\n\nQuitRevealModal.MainText = function QuitRevealModalMainText({\n  children,\n  ...restProps\n}) {\n  return <MainText {...restProps}>{children}</MainText>;\n};\n\nQuitRevealModal.SubText = function QuitRevealModalSubText({\n  children,\n  ...restProps\n}) {\n  return <SubText {...restProps}>{children}</SubText>;\n};\n\nQuitRevealModal.ButtonContainer = function QuitRevealModalButtonContainer({\n  children,\n  ...restProps\n}) {\n  return <ButtonContainer {...restProps}>{children}</ButtonContainer>;\n};\n\nQuitRevealModal.Button = function QuitRevealModalButton({\n  children,\n  ...restProps\n}) {\n  return <Button {...restProps}>{children}</Button>;\n};\n","import styled from \"styled-components/macro\";\n\nexport const Container = styled.div`\n  background-color: #14274e;\n  position: fixed;\n  z-index: 1000;\n  top: 25%;\n  left: 25%;\n  right: 25%;\n  bottom: 25%;\n  padding: 1%;\n  box-sizing: border-box;\n  box-shadow: 1px 1px white;\n  @media (max-width: 1100px) {\n    width: 80%;\n    height: 60%;\n    margin: auto;\n    top: 20%;\n    left: 2%;\n    right: 2%;\n  }\n`;\n\nexport const Frame = styled.div`\n  display: flex;\n  flex-direction: row;\n`;\n\nexport const MainText = styled.h1`\n  font-size: 1.8em;\n  color: white;\n  margin-top: 8%;\n  margin-left: 8%;\n\n  @media (max-width: 1100px) {\n    font-size: 1em;\n    margin-left: 15%;\n    margin-top: 15%;\n  }\n  @media (max-width: 700px) {\n    font-size: 0.9em;\n    letter-spacing: 0.3px;\n    line-height: 2em;\n    margin-right: 1%;\n    margin-left: 5%;\n    margin-top: 10%;\n  }\n`;\n\nexport const ButtonContainer = styled.div`\n  display: flex;\n  justify-content: space-around;\n  width: 80%;\n  margin: auto;\n  margin-top: 5%;\n  /* background-color: orange; */\n\n  @media (max-width: 1100px) {\n    align-items: center;\n    margin-top: 11%;\n    width: 90%;\n  }\n  @media (max-width: 1000px) {\n    align-items: center;\n    margin-top: 20%;\n    width: 90%;\n  }\n\n  @media (max-width: 700px) {\n    align-items: center;\n    margin-top: 18%;\n    width: 90%;\n  }\n`;\n\nexport const Input = styled.input`\n  color: white;\n  margin-left: 19%;\n  background-color: #394867;\n  width: 20em;\n  outline: none;\n  padding: 14px;\n  margin-top: 8%;\n  border-radius: 20px;\n  border: 1px solid 394867;\n  font-size: 1.2em;\n  letter-spacing: 4px;\n  text-transform: uppercase;\n  @media (max-width: 1200px) {\n    width: 8em;\n    /* background-color: black; */\n  }\n  @media (max-width: 1000px) {\n    width: 8em;\n    padding: 8px;\n    margin-left: 10%;\n    margin-top: 20%;\n  }\n`;\n\nexport const SubText = styled.p`\n  font-size: 0.9em;\n  color: white;\n  letter-spacing: 1.5px;\n  /* margin-left: 12px; */\n  @media (max-width: 700px) {\n    letter-spacing: 1px;\n    font-size: 0.8em;\n    margin-left: ${({ error }) => error && \"15px\"};\n    margin-top: ${({ error }) => error && \"5px\"};\n  }\n  ${({ error }) =>\n    error\n      ? {\n          marginLeft: \"35%\",\n          marginTop: \"-10px\",\n          color: \"red\",\n        }\n      : {\n          marginLeft: \"12px\",\n        }}\n`;\n\nexport const Button = styled.button`\n  width: 220px;\n  padding: 8px;\n  border-radius: 50px;\n  background-color: #394867;\n  color: #fcfffc;\n  font-size: 20px;\n  font-weight: 500;\n  letter-spacing: 1px;\n  border: none;\n  &:disabled {\n    cursor: not-allowed;\n    background-color: #9ba4b4;\n    &:hover {\n      background-color: #9ba4b4;\n      font-size: 20px;\n      font-weight: normal;\n      letter-spacing: 1px;\n    }\n  }\n\n  cursor: pointer;\n  outline: none;\n\n  margin-bottom: 6%;\n  /* margin-left: 33%; */\n  margin-top: 4%;\n  @media (max-width: 700px) {\n    width: 150px;\n  }\n\n  &:hover {\n    background-color: #e6a347;\n    /* font-weight: 700; */\n    /* font-size: 22px; */\n    /* letter-spacing: 0px; */\n    transition: background-color 0.3s;\n  }\n\n  @media (max-width: 1300px) {\n    padding: 10px;\n    width: 130px;\n    margin: auto;\n    margin-bottom: 10%;\n    margin-top: 8%;\n    font-size: 14px;\n  }\n\n  @media (max-width: 700px) {\n    padding: 10px;\n    width: 150px;\n    margin: auto;\n    margin-bottom: 10%;\n    margin-top: 8%;\n    font-size: 14px;\n  }\n`;\n\nexport const LettersLeft = styled.p`\n  border-radius: 50px;\n  letter-spacing: 4px;\n  border: 1px solid #394867;\n  display: inline-block;\n  color: white;\n  margin-left: 1%;\n  padding: 14px;\n  background-color: #394867;\n  @media (max-width: 1000px) {\n    padding: 8px;\n  }\n`;\n","import React from \"react\";\nimport {\n  Container,\n  Frame,\n  MainText,\n  ButtonContainer,\n  Button,\n  //   Input,\n  SubText,\n  LettersLeft,\n} from \"./styles/userInputModal\";\n\nimport { UserInputModalLogo as Logo } from \"../../commonStyles/logo\";\n\nexport default function UserInputModal({ children, ...restProps }) {\n  return <Container {...restProps}>{children} </Container>;\n}\n\nUserInputModal.Frame = function UserInputModalFrame({\n  children,\n  ...restProps\n}) {\n  return <Frame {...restProps}>{children}</Frame>;\n};\n\nUserInputModal.Logo = function UserInputModalLogo({ ...restProps }) {\n  return <Logo {...restProps} />;\n};\n\nUserInputModal.MainText = function UserInputModalMainText({\n  children,\n  ...restProps\n}) {\n  return <MainText {...restProps}>{children} </MainText>;\n};\n\nUserInputModal.Input = function UserInputModalInput({\n  children,\n  ...restProps\n}) {\n  return (\n    <>\n      {/* <Input {...restProps} /> */}\n      <LettersLeft {...restProps}>{children} </LettersLeft>\n    </>\n  );\n};\n\nUserInputModal.ButtonContainer = function UserInputModalButtonContainer({\n  children,\n  ...restProps\n}) {\n  return <ButtonContainer {...restProps}>{children} </ButtonContainer>;\n};\n\nUserInputModal.Button = function UserInputModalButton({\n  children,\n  ...restProps\n}) {\n  return <Button {...restProps}>{children} </Button>;\n};\n\nUserInputModal.SubText = function UserInputModalSubText({\n  children,\n  ...restProps\n}) {\n  return <SubText {...restProps}>{children} </SubText>;\n};\n","import styled from \"styled-components/macro\";\n\nexport const Container = styled.div`\n  background-color: #14274e;\n  position: fixed;\n  z-index: 1000;\n  top: 25%;\n  left: 25%;\n  right: 25%;\n  bottom: 25%;\n  padding: 1%;\n  box-sizing: border-box;\n  box-shadow: 1px 1px white;\n  @media (max-width: 1100px) {\n    width: 80%;\n    height: 60%;\n    margin: auto;\n    top: 20%;\n    left: 2%;\n    right: 2%;\n  }\n`;\n\nexport const Frame = styled.div`\n  display: flex;\n  flex-direction: row;\n  /* background: orange; */\n`;\n\nexport const MainText = styled.h1`\n  font-size: 1.3em;\n  color: white;\n  margin-top: 8%;\n  margin-left: 10%;\n\n  @media (max-width: 1100px) {\n    font-size: 1em;\n    margin-left: 25%;\n    margin-top: 15%;\n  }\n  @media (max-width: 700px) {\n    font-size: 0.9em;\n    letter-spacing: 0.3px;\n    line-height: 2em;\n    margin-right: 1%;\n    margin-left: 20%;\n    margin-top: 10%;\n  }\n`;\n\nexport const SubText = styled.h3`\n  font-size: 1.2em;\n  /* color: #ffa62b; */\n  color: ${({ result }) => (result ? \"#ffa62b\" : \"white\")};\n  /* color: white; */\n  position: absolute;\n  top: ${({ result }) => (result ? \"45%\" : \"35%\")};\n  left: 42%;\n  letter-spacing: ${({ result }) => (result ? \"4px\" : \"1px\")};\n  @media (max-width: 700px) {\n    top: ${({ result }) => (result ? \"35%\" : \"25%\")};\n    left: 22%;\n    font-size: 1em;\n  }\n`;\n\nexport const ButtonContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  margin-top: 30%;\n\n  @media (max-width: 700px) {\n    align-items: center;\n    margin-top: 65%;\n  }\n`;\n\nexport const Button = styled.button`\n  width: 220px;\n  padding: 8px;\n  border-radius: 50px;\n  background-color: #394867;\n  color: #fcfffc;\n  font-size: 20px;\n  font-weight: 500;\n  letter-spacing: 1px;\n  border: none;\n\n  cursor: pointer;\n  outline: none;\n\n  margin-bottom: 6%;\n  margin-left: 33%;\n  margin-top: 4%;\n\n  &:hover {\n    background-color: #e6a347;\n    font-weight: 700;\n    font-size: 22px;\n    letter-spacing: 0px;\n    transition: background-color 0.3s;\n  }\n  @media (max-width: 700px) {\n    width: 170px;\n    margin: auto;\n    margin-bottom: 10%;\n    margin-top: 8%;\n    font-size: 14px;\n  }\n`;\n","import React from \"react\";\nimport {\n  Container,\n  Frame,\n  MainText,\n  ButtonContainer,\n  Button,\n  SubText,\n} from \"./styles/wonLost\";\n\nexport default function WonLostModal({ children, ...restProps }) {\n  return <Container {...restProps}> {children} </Container>;\n}\n\nWonLostModal.Frame = function WonLostModalFrame({ children, ...restProps }) {\n  return <Frame {...restProps}> {children} </Frame>;\n};\n\nWonLostModal.MainText = function WonLostModalMainText({\n  children,\n  ...restProps\n}) {\n  return <MainText {...restProps}> {children} </MainText>;\n};\n\nWonLostModal.ButtonContainer = function WonLostModalButtonContainer({\n  children,\n  ...restProps\n}) {\n  return <ButtonContainer {...restProps}> {children} </ButtonContainer>;\n};\n\nWonLostModal.Button = function WonLostModalButton({ children, ...restProps }) {\n  return <Button {...restProps}> {children} </Button>;\n};\n\nWonLostModal.SubText = function WonLostModalSubText({\n  children,\n  ...restProps\n}) {\n  return <SubText {...restProps}> {children} </SubText>;\n};\n","export default function GameLogic(hiddenWord, guessedWord) {\n  // hidden word - sky\n  // guessed word - ink  -- 1c\n\n  // hidden word - sky\n  // guessed word - sat   -- 1b\n\n  // hidden word - sky\n  // guessed word - pat   -- 00\n\n  const hidden = [...hiddenWord]; // S  K  Y\n  const guessed = [...guessedWord]; // P  S  T\n  let cow = 0;\n  let bull = 0;\n  hidden.forEach((hiddenLetter, hiddenIndex) => {\n    // got the first letter of hidden and this should be compared with all the letters in guessed to find the cow and bull count\n    guessed.forEach((guessedLetter, guessedInex) => {\n      if (hiddenLetter === guessedLetter) {\n        if (hiddenIndex === guessedInex) bull++;\n        else cow++;\n      }\n    });\n  });\n  return { cow, bull };\n}\n","import React, { useContext, useEffect } from \"react\";\nimport { GamePlay } from \"../components\";\nimport logo from \"../logo.svg\";\nimport { GameContext } from \"../App\";\nimport GameLogic from \"../gameLogic\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default function GamePlayContainer() {\n  const {\n    hintLetters,\n    setHintLetters,\n    gameOver,\n    setGameOver,\n    attempts,\n    attemptsPlayed,\n    gameType,\n    level,\n    letters,\n    setWonTheGame,\n    setShowQuitRevealModal,\n    setShowRevealModal,\n    setShowUserInputModal,\n    setShowWonLostModal,\n    myChoices,\n    newGame,\n    hiddenWord,\n  } = useContext(GameContext);\n\n  const history = useHistory();\n\n  const letterClickedHandler = (innerText) => {\n    // Prevents React from resetting its properties:  https://reactjs.org/docs/legacy-event-pooling.html\n    // I get error for using the same event if I don't use this\n    // event.persist();\n    console.log(`The inner text is ${innerText}`);\n    if (hintLetters.includes(innerText)) {\n      console.log(\"includes \" + innerText);\n      // const index = hintLetters.indexOf(innerText);\n      // hintLetters.splice(index, 1);\n\n      // using filter to remove an element (innerText)that exists in array\n      const newHintLetters = hintLetters.filter(\n        (hintLetter) => hintLetter !== innerText\n      );\n      setHintLetters(newHintLetters);\n\n      return;\n    }\n    setHintLetters((prevHintLetters) => [...prevHintLetters, innerText]);\n  };\n\n  //reload the window to clear cached words/numbers from previous game\n  useEffect(() => {\n    if (newGame) {\n      window.location.reload();\n    }\n  }, [newGame]);\n\n  // as soon as the Game Play page opens the user input choice opens\n  useEffect(() => {\n    if (myChoices !== null && myChoices.length === 0) {\n      setShowUserInputModal(true);\n    }\n  }, [myChoices, setShowUserInputModal]);\n\n  useEffect(() => {\n    console.log(`The hidden word is ${hiddenWord}`);\n  }, [hiddenWord]);\n\n  // check for win\n  useEffect(() => {\n    // console.log(\n    //   `userInput is ${myChoices[myChoices.length - 1]} from useEffect gameplay`\n    // );\n    if (myChoices !== null && myChoices.length > 0) {\n      const checkAgainst = myChoices[myChoices.length - 1];\n      const checkForWin = GameLogic(\n        hiddenWord.toUpperCase(),\n        checkAgainst.toUpperCase()\n      );\n      if (checkForWin.bull === Number(letters)) {\n        setWonTheGame(true);\n        setShowWonLostModal(true);\n        setGameOver(true);\n      }\n      if (attempts === attemptsPlayed) {\n        setWonTheGame(false);\n        setShowWonLostModal(true);\n        setGameOver(true);\n      }\n    }\n  }, [\n    myChoices,\n    hiddenWord,\n    setGameOver,\n    setShowWonLostModal,\n    setWonTheGame,\n    attempts,\n    attemptsPlayed,\n    letters,\n  ]);\n\n  const gameOverHandler = () => {\n    history.push(\"/\");\n    localStorage.setObj(\"userInputs\", []);\n    setGameOver(false);\n  };\n\n  return (\n    <GamePlay>\n      <GamePlay.Frame>\n        <GamePlay.Logo\n          src={logo}\n          alt=\"Logo\"\n          onClick={() => setShowQuitRevealModal(true)}\n        />\n        <GamePlay.WordContainer extraWidthRight>\n          <GamePlay.SubText>\n            Attempts Left &nbsp;\n            <span\n              style={{\n                color: \"#ffa62b\",\n                fontWeight: \"bold\",\n              }}\n            >\n              {attempts - attemptsPlayed}\n            </span>\n          </GamePlay.SubText>\n          <GamePlay.SubText>\n            Hidden &nbsp;{\" \"}\n            <span\n              style={{\n                color: \"transparent\",\n                background: \"#eeeded\",\n                opacity: 0.3,\n                borderRadius: \"20%\",\n                userSelect: \"none\",\n                textShadow: \"0 0 5px rgba(0,0,0,0.5)\",\n              }}\n            >\n              0000\n            </span>\n          </GamePlay.SubText>\n        </GamePlay.WordContainer>\n        <GamePlay.MainText>\n          <span style={{ color: \"#ffa62b\" }}>{letters} </span> Letter{\" \"}\n          <span style={{ color: \"#ffa62b\" }}>{gameType} </span>\n        </GamePlay.MainText>\n        {gameOver && (\n          <GamePlay.SubText gameOver>\n            The {gameType} is {hiddenWord.toUpperCase()}\n          </GamePlay.SubText>\n        )}\n        <GamePlay.WordContainer difficulty>\n          <GamePlay.SubText difficulty>\n            <span style={{ color: \"#ffa62b\", fontWeight: \"bold\" }}>\n              {level}\n            </span>\n          </GamePlay.SubText>\n        </GamePlay.WordContainer>\n      </GamePlay.Frame>\n\n      <GamePlay.AttemptsContainer>\n        {myChoices &&\n          myChoices.map((myChoice, index) => {\n            // word match logic here to give cows and bulls\n            const result = GameLogic(\n              hiddenWord.toUpperCase(),\n              myChoice.toUpperCase()\n            );\n\n            const letters = [...myChoice];\n            return (\n              <GamePlay.AttemptWrapper key={index + myChoice}>\n                <GamePlay.AttemptNumber>{index + 1}.</GamePlay.AttemptNumber>\n\n                <GamePlay.LettersContainer>\n                  {letters.map((letter, index) => (\n                    <GamePlay.LetterContainer\n                      onClick={(e) => letterClickedHandler(e.target.innerText)}\n                      key={letter + index}\n                      style={{\n                        backgroundColor: hintLetters.includes(letter)\n                          ? \"grey\"\n                          : \"#394867\",\n                      }}\n                    >\n                      {letter}\n                    </GamePlay.LetterContainer>\n                  ))}\n\n                  {/* <GamePlay.LetterContainer>K</GamePlay.LetterContainer>\n                <GamePlay.LetterContainer>K</GamePlay.LetterContainer>\n                <GamePlay.LetterContainer>K</GamePlay.LetterContainer>\n                <GamePlay.LetterContainer style={{ color: \"#9BA4B4\" }}>\n                  N\n                </GamePlay.LetterContainer>\n                <GamePlay.LetterContainer>G</GamePlay.LetterContainer> */}\n                </GamePlay.LettersContainer>\n\n                {/* <GamePlay.AttemptResult>2B,3C</GamePlay.AttemptResult> */}\n                <GamePlay.AttemptResult>\n                  {/* <span style={{ color: \"#cad315\" }}>{result.bull}B</span>\n                  <span style={{ color: \"#e4e978\" }}>{result.cow}C</span> */}\n                  <GamePlay.SubText bull>{result.bull}B</GamePlay.SubText>\n                  <GamePlay.SubText cow>{result.cow}C</GamePlay.SubText>\n                </GamePlay.AttemptResult>\n              </GamePlay.AttemptWrapper>\n            );\n          })}\n        {/* <GamePlay.AttemptWrapper>\n          <GamePlay.AttemptNumber>1.</GamePlay.AttemptNumber>\n          <GamePlay.LettersContainer>\n            <GamePlay.LetterContainer>K</GamePlay.LetterContainer>\n            <GamePlay.LetterContainer>K</GamePlay.LetterContainer>\n            <GamePlay.LetterContainer style={{ color: \"#9BA4B4\" }}>\n              N\n            </GamePlay.LetterContainer>\n          </GamePlay.LettersContainer>\n          <GamePlay.AttemptResult>2C</GamePlay.AttemptResult>\n        </GamePlay.AttemptWrapper> */}\n      </GamePlay.AttemptsContainer>\n\n      <GamePlay.ButtonContainer>\n        {gameOver ? (\n          <GamePlay.Button onClick={gameOverHandler} reveal>\n            New Game\n          </GamePlay.Button>\n        ) : (\n          <GamePlay.Button onClick={() => setShowRevealModal(true)} reveal>\n            Reveal Word\n          </GamePlay.Button>\n        )}\n        <GamePlay.Button\n          disabled={gameOver}\n          onClick={() => setShowUserInputModal(true)}\n          guess\n        >\n          Guess Next Word\n        </GamePlay.Button>\n        <GamePlay.Button onClick={() => setShowQuitRevealModal(true)} quit>\n          Quit\n        </GamePlay.Button>\n      </GamePlay.ButtonContainer>\n    </GamePlay>\n  );\n}\n","export const GAME_TYPE = \"gameType\";\nexport const LEVEL = \"level\";\nexport const LETTERS = \"letters\";\n","export const gameTypes = {\n  3: {\n    easy: {\n      attempts: 10,\n    },\n    medium: {\n      attempts: 8,\n    },\n    hard: {\n      attempts: 6,\n    },\n  },\n  4: {\n    easy: {\n      attempts: 12,\n    },\n    medium: {\n      attempts: 10,\n    },\n    hard: {\n      attempts: 8,\n    },\n  },\n  5: {\n    easy: {\n      attempts: 14,\n    },\n    medium: {\n      attempts: 12,\n    },\n    hard: {\n      attempts: 9,\n    },\n  },\n  6: {\n    easy: {\n      attempts: 15,\n    },\n    medium: {\n      attempts: 12,\n    },\n    hard: {\n      attempts: 10,\n    },\n  },\n};\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { GameSelection } from \"../components\";\nimport logo from \"../logo.svg\";\nimport { GameContext } from \"../App\";\nimport { useHistory } from \"react-router-dom\";\nimport * as GAME from \"../helpers/constants\";\nimport { gameTypes as attemptsGetter } from \"../helpers/gameTypes\";\n\nexport default function GameSelectionContainer() {\n  const {\n    gameType,\n    level,\n    setLevel,\n    letters,\n    setLetters,\n    setAttempts,\n    setAttemptsPlayed,\n    setHiddenWord,\n  } = useContext(GameContext);\n  const history = useHistory();\n  const [levelSelected, setLevelSelected] = useState(null);\n  const [lettersSelected, setLettersSelected] = useState(null);\n\n  useEffect(() => {\n    const randomWords = require(\"random-words\");\n    const noRepeatedLetters = require(\"no-repeated-letters\");\n\n    if (gameType === \"Word\") {\n      let word = randomWords();\n      while (word.length !== Number(letters) || !noRepeatedLetters(word)) {\n        // the word shoild not exceed the length selected and it should not have repeated characters\n        word = randomWords();\n      }\n      // console.log(\"I got my word and it is \" + word);\n      localStorage.setItem(\"hiddenWord\", word);\n      setHiddenWord(localStorage.getItem(\"hiddenWord\"));\n    } else if (gameType === \"Number\") {\n      const numberSet = \"0123456789\";\n      var stringLength = Number(letters);\n\n      function pickRandom() {\n        return numberSet[Math.floor(Math.random() * numberSet.length)];\n      }\n\n      let numbers = Array.apply(null, Array(stringLength))\n        .map(pickRandom)\n        .join(\"\");\n\n      while (\n        numbers.length !== Number(letters) ||\n        !noRepeatedLetters(numbers)\n      ) {\n        // the word shoild not exceed the length selected and it should not have repeated characters\n        numbers = Array.apply(null, Array(stringLength))\n          .map(pickRandom)\n          .join(\"\");\n      }\n\n      console.log(`The random numbers ${numbers}`);\n      localStorage.setItem(\"hiddenWord\", numbers);\n      setHiddenWord(localStorage.getItem(\"hiddenWord\"));\n    }\n  }, [gameType, setHiddenWord, letters]);\n\n  const gamePlayHandler = () => {\n    console.log(\n      `The game type is ${gameType}, the level is ${level} and the length is ${letters}`\n    );\n    // get the attempts based on selection of difficulty level and letters\n    // const attempts = attemptsGetter[`${letters}`][`${level}`];\n    const attempts =\n      attemptsGetter[`${Number(letters)}`][`${level.toLowerCase()}`][\n        \"attempts\"\n      ];\n    console.log(attempts);\n\n    setAttempts(localStorage.setItem(\"attempts\", Number(attempts)));\n    localStorage.setItem(\"attemptsPlayed\", Number(0));\n    setAttemptsPlayed(localStorage.getItem(\"attemptsPlayed\"));\n\n    history.push(\"/play\");\n  };\n\n  const setLevelHandler = ({ target }) => {\n    console.log(`The target value is ${target.value}`);\n    localStorage.setItem(GAME.LEVEL, target.value);\n    setLevel(localStorage.getItem(GAME.LEVEL));\n  };\n\n  const setLettersHandler = ({ target }) => {\n    console.log(`The target value is ${target.value}`);\n    localStorage.setItem(GAME.LETTERS, target.value);\n    setLetters(localStorage.getItem(GAME.LETTERS));\n  };\n  return (\n    <GameSelection>\n      <GameSelection.Frame>\n        <GameSelection.Logo\n          onClick={() => history.push(\"/\")}\n          src={logo}\n          alt=\"Logo\"\n        />\n        <GameSelection.MainText>\n          Select <span style={{ color: \"#ffa62b\" }}>{gameType} </span>Game Type\n        </GameSelection.MainText>\n      </GameSelection.Frame>\n\n      <GameSelection.ButtonContainer\n        // onChange={({ target }) => setLevel(target.value)}\n        onChange={setLevelHandler}\n        flexDirection=\"row\"\n      >\n        <GameSelection.SelectButton\n          type=\"radio\"\n          id=\"easy\"\n          value=\"Easy\"\n          name=\"level\"\n        />\n        <GameSelection.SelectLabel\n          onClick={() => setLevelSelected(true)}\n          htmlFor=\"easy\"\n        >\n          Easy\n        </GameSelection.SelectLabel>\n        <GameSelection.SelectButton\n          type=\"radio\"\n          id=\"medium\"\n          value=\"Medium\"\n          name=\"level\"\n        />\n        <GameSelection.SelectLabel\n          htmlFor=\"medium\"\n          onClick={() => setLevelSelected(true)}\n        >\n          Medium\n        </GameSelection.SelectLabel>\n\n        <GameSelection.SelectButton\n          type=\"radio\"\n          id=\"hard\"\n          value=\"Hard\"\n          name=\"level\"\n        />\n        <GameSelection.SelectLabel\n          onClick={() => setLevelSelected(true)}\n          htmlFor=\"hard\"\n        >\n          Hard\n        </GameSelection.SelectLabel>\n      </GameSelection.ButtonContainer>\n\n      <GameSelection.ButtonContainer\n        onChange={setLettersHandler}\n        flexDirection=\"row\"\n        shrinkable\n      >\n        <GameSelection.SelectButton\n          type=\"radio\"\n          id=\"3letters\"\n          value=\"3\"\n          name=\"letters\"\n        />\n        <GameSelection.SelectLabel\n          onClick={() => setLettersSelected(true)}\n          column\n          htmlFor=\"3letters\"\n        >\n          3 Letters\n        </GameSelection.SelectLabel>\n        <GameSelection.SelectButton\n          type=\"radio\"\n          id=\"4letters\"\n          value=\"4\"\n          name=\"letters\"\n        />\n        <GameSelection.SelectLabel\n          onClick={() => setLettersSelected(true)}\n          column\n          htmlFor=\"4letters\"\n        >\n          4 Letters\n        </GameSelection.SelectLabel>\n        <GameSelection.SelectButton\n          type=\"radio\"\n          id=\"5letters\"\n          value=\"5\"\n          name=\"letters\"\n        />\n        <GameSelection.SelectLabel\n          onClick={() => setLettersSelected(true)}\n          column\n          htmlFor=\"5letters\"\n        >\n          5 Letters\n        </GameSelection.SelectLabel>\n        <GameSelection.SelectButton\n          type=\"radio\"\n          id=\"6letters\"\n          value=\"6\"\n          name=\"letters\"\n        />\n        <GameSelection.SelectLabel\n          onClick={() => setLettersSelected(true)}\n          column\n          htmlFor=\"6letters\"\n        >\n          6 Letters\n        </GameSelection.SelectLabel>\n      </GameSelection.ButtonContainer>\n      <GameSelection.ButtonContainer confirm>\n        <GameSelection.Button\n          play\n          onClick={gamePlayHandler}\n          disabled={levelSelected === null || lettersSelected === null}\n        >\n          PLAY\n        </GameSelection.Button>\n        <GameSelection.Button onClick={history.goBack}>\n          BACK\n        </GameSelection.Button>\n      </GameSelection.ButtonContainer>\n    </GameSelection>\n  );\n}\n","import React, { useContext } from \"react\";\nimport { Home } from \"../components\";\nimport logo from \"../logo.svg\";\nimport { GameContext } from \"../App\";\nimport { useHistory } from \"react-router-dom\";\nimport * as GAME from \"../helpers/constants\";\n\nexport default function HomeContainer() {\n  const { setGameType, setShowRulesModal, setNewGame } = useContext(\n    GameContext\n  );\n  const history = useHistory();\n\n  const gameHandler = (game) => {\n    if (game === \"Word\") {\n      window.localStorage.setItem(GAME.GAME_TYPE, \"Word\");\n    } else {\n      window.localStorage.setItem(GAME.GAME_TYPE, \"Number\");\n    }\n    setGameType(localStorage.getItem(GAME.GAME_TYPE));\n    // setting newGame to true because this helps to clear the window and reload the  gamePlay if the game is new to clear the cached words/numbers from the previous game\n    setNewGame(true);\n    history.push(\"/select\");\n  };\n\n  return (\n    <Home>\n      <Home.Frame>\n        <Home.Logo src={logo} alt=\"Logo\" />\n        <Home.WordContainer>\n          <Home.MainText> Bull</Home.MainText>\n          <Home.Subtitle> Guess me if you can</Home.Subtitle>\n        </Home.WordContainer>\n      </Home.Frame>\n      <Home.ButtonContainer>\n        <Home.Button onClick={() => gameHandler(\"Word\")}>\n          Let's Play Word\n        </Home.Button>\n        <Home.Button onClick={() => gameHandler(\"Number\")}>\n          Let's Play Number\n        </Home.Button>\n        <Home.ButtonLink setShowRulesModal={setShowRulesModal}>\n          How to Play?\n        </Home.ButtonLink>\n      </Home.ButtonContainer>\n    </Home>\n  );\n}\n","import React, { useContext } from \"react\";\nimport { GameContext } from \"../App\";\nimport { Modal, QuitRevealModal } from \"../components\";\nimport logo from \"../logo.svg\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default function QuitRevealModalContainer() {\n  const history = useHistory();\n  const {\n    hiddenWord,\n    showRevealModal,\n    showQuitRevealModal,\n    setShowQuitRevealModal,\n    setShowRevealModal,\n    revealIt,\n    setRevealIt,\n    gameType,\n  } = useContext(GameContext);\n\n  return (\n    <Modal>\n      <Modal.Overlay\n        onClick={() => {\n          setShowQuitRevealModal(false);\n          setShowRevealModal(false);\n          setRevealIt(false);\n        }}\n      />\n      {/* different modal contents go here */}\n      <Modal.Content>\n        {/* in here, we get the actual component */}\n        <QuitRevealModal>\n          <QuitRevealModal.Frame>\n            <QuitRevealModal.Logo src={logo} alt=\"Logo\" />\n            {(showQuitRevealModal || showRevealModal) && !revealIt && (\n              <QuitRevealModal.MainText>\n                Do you really want to {showQuitRevealModal && \" quit\"}\n                {showRevealModal && \"reveal\"} ?\n              </QuitRevealModal.MainText>\n            )}\n            {revealIt && (\n              <>\n                <QuitRevealModal.MainText>\n                  Alright, the hidden {gameType} is\n                  {/* <span style={{ color: \"#ffa62b\" }}>W H A L E</span> */}\n                </QuitRevealModal.MainText>\n                <QuitRevealModal.SubText>{hiddenWord}</QuitRevealModal.SubText>\n              </>\n            )}\n          </QuitRevealModal.Frame>\n\n          {revealIt ? (\n            <QuitRevealModal.ButtonContainer>\n              <QuitRevealModal.Button\n                style={{ visibility: \"hidden\" }}\n              ></QuitRevealModal.Button>\n              <QuitRevealModal.Button\n                onClick={() => {\n                  setShowRevealModal(false);\n                  setRevealIt(false);\n                }}\n              >\n                OK\n              </QuitRevealModal.Button>\n            </QuitRevealModal.ButtonContainer>\n          ) : (\n            <QuitRevealModal.ButtonContainer>\n              {showQuitRevealModal && (\n                <QuitRevealModal.Button\n                  onClick={() => {\n                    // clears the local storage\n                    localStorage.setObj(\"userInputs\", []);\n                    history.push(\"/\");\n                    setShowQuitRevealModal(false);\n                  }}\n                >\n                  Quit\n                </QuitRevealModal.Button>\n              )}\n              {showRevealModal && (\n                <QuitRevealModal.Button\n                  onClick={() => {\n                    localStorage.setObj(\"userInputs\", []);\n                    setRevealIt(true);\n                    history.push(\"/\");\n                  }}\n                >\n                  Reveal\n                </QuitRevealModal.Button>\n              )}\n              <QuitRevealModal.Button\n                onClick={() => {\n                  setShowQuitRevealModal(false);\n                  setShowRevealModal(false);\n                }}\n              >\n                Play On\n              </QuitRevealModal.Button>\n            </QuitRevealModal.ButtonContainer>\n          )}\n        </QuitRevealModal>\n      </Modal.Content>\n    </Modal>\n  );\n}\n","import React, { useContext } from \"react\";\nimport { GameContext } from \"../App\";\nimport { Modal, RulesModal } from \"../components\";\nimport logo from \"../logo.svg\";\n\nexport default function RulesModalContainer() {\n  const { setShowRulesModal } = useContext(GameContext);\n\n  return (\n    <Modal>\n      <Modal.Overlay onClick={() => setShowRulesModal(false)} />\n      {/* different modal contents go here */}\n      <Modal.Content>\n        {/* in here, we get the actual component */}\n        <RulesModal>\n          <RulesModal.Frame>\n            <RulesModal.Logo src={logo} alt=\"Logo\" />\n            <RulesModal.MainText>How to Play?</RulesModal.MainText>\n          </RulesModal.Frame>\n          <RulesModal.InfoText>\n            You need to guess the\n            <span style={{ fontWeight: \"bold\" }}> hidden word or number </span>\n            in specific number of attempts. The number of attempts depends on\n            the difficulty level selected. The number or word can be of length 3\n            to 6 based on your game selection.\n            <span style={{ fontWeight: \"bold\" }}>\n              &nbsp;A letter can’t be repeated in a Word or Number combination\n            </span>\n            .\n          </RulesModal.InfoText>\n          <RulesModal.WordContainer>\n            <RulesModal.SubText>\n              Examples shown below for 4 letter word - CAKE\n            </RulesModal.SubText>\n            <RulesModal.SubText>\n              <span style={{ color: \"red\" }}>NOT ALLOWED TYPES </span>\n            </RulesModal.SubText>\n            <RulesModal.SubText>\n              <span\n                style={{ textDecoration: \"line-through\", fontWeight: \"bold\" }}\n              >\n                E <span style={{ color: \"red\" }}>G G</span> S\n              </span>\n            </RulesModal.SubText>\n            <RulesModal.SubText>\n              <span\n                style={{ textDecoration: \"line-through\", fontWeight: \"bold\" }}\n              >\n                1 3 <span style={{ color: \"red\" }}>2 2</span>\n              </span>\n            </RulesModal.SubText>\n          </RulesModal.WordContainer>\n          <RulesModal.WordContainer>\n            <RulesModal.ExampleContainer>\n              <RulesModal.SubText style={{ fontWeight: \"bold\" }}>\n                Example 1\n              </RulesModal.SubText>\n              <RulesModal.SubText>\n                Hidden Word &nbsp; &nbsp;&nbsp;\n                <span style={{ color: \"#ffa62b\" }}>C A</span> K E\n              </RulesModal.SubText>\n              <RulesModal.SubText>\n                Guessed Word &nbsp;&nbsp;\n                <span style={{ color: \"#ffa62b\" }}>C A</span> L F &nbsp; &nbsp;{\" \"}\n                <span style={{ color: \"#ffa62b\", fontWeight: \"bold\" }}>\n                  2 B\n                </span>\n              </RulesModal.SubText>\n              <RulesModal.SubText style={{ fontSize: \"0.8em\" }}>\n                Two letters matched here in exact positions, so&nbsp;&nbsp;\n                <span style={{ color: \"#ffa62b\", fontWeight: \"bold\" }}>\n                  2 BULLS\n                </span>\n              </RulesModal.SubText>\n            </RulesModal.ExampleContainer>\n            <RulesModal.ExampleContainer>\n              <RulesModal.SubText style={{ fontWeight: \"bold\" }}>\n                Example 2\n              </RulesModal.SubText>\n              <RulesModal.SubText>\n                Hidden Word &nbsp; &nbsp;&nbsp;C A{\" \"}\n                <span style={{ color: \"#ffa62b\" }}>K</span> E\n              </RulesModal.SubText>\n              <RulesModal.SubText>\n                Guessed Word &nbsp;&nbsp;\n                <span style={{ color: \"#ffa62b\" }}>K</span> I N G &nbsp; &nbsp;{\" \"}\n                <span style={{ color: \"#ffa62b\", fontWeight: \"bold\" }}>\n                  1 C\n                </span>\n              </RulesModal.SubText>\n              <RulesModal.SubText style={{ fontSize: \"0.8em\" }}>\n                One letter matched here, but in different position, so{\" \"}\n                <span style={{ color: \"#ffa62b\", fontWeight: \"bold\" }}>\n                  1 Cow\n                </span>\n              </RulesModal.SubText>\n            </RulesModal.ExampleContainer>\n          </RulesModal.WordContainer>\n          <RulesModal.Button onClick={() => setShowRulesModal(false)}>\n            OK\n          </RulesModal.Button>\n        </RulesModal>\n      </Modal.Content>\n    </Modal>\n  );\n}\n","import React, { useContext, useEffect, useState, useRef } from \"react\";\nimport { GameContext } from \"../App\";\nimport { Modal, UserInputModal } from \"../components\";\nimport logo from \"../logo.svg\";\nimport Radium from \"radium\";\nimport { rword } from \"rword\";\n\nfunction UserInputModalContainer() {\n  const inputStyles = {\n    color: \"white\",\n    marginLeft: \"19%\",\n    backgroundColor: \"#394867\",\n    width: \"20em\",\n    outline: \"none\",\n    padding: \"14px\",\n    marginTop: \"8%\",\n    borderRadius: \"20px\",\n    border: \"1px solid 394867\",\n    fontSize: \"1.2em\",\n    letterSpacing: \"4px\",\n    textTransform: \"uppercase\",\n    \"@media (max-width: 1400px)\": {\n      width: \"14em\",\n      padding: \"8px\",\n      marginLeft: \"15%\",\n      marginTop: \"10%\",\n    },\n    \"@media (max-width: 1100px)\": {\n      width: \"13em\",\n      padding: \"8px\",\n      marginLeft: \"20%\",\n      marginTop: \"15%\",\n    },\n\n    \"@media (max-width: 800px)\": {\n      width: \"9em\",\n      padding: \"8px\",\n      marginLeft: \"15%\",\n      marginTop: \"13%\",\n    },\n  };\n  const {\n    isInValidWord,\n    setIsInValidWord,\n    attempts,\n    attemptsPlayed,\n    setAttemptsPlayed,\n    wordExistError,\n    setWordExistError,\n    gameType,\n    setShowUserInputModal,\n    inputDuplicatesError,\n    setInputDuplicateError,\n    userInput,\n    setUserInput,\n    letters,\n    myChoices,\n    setMyChoices,\n  } = useContext(GameContext);\n\n  // to focus on input field\n  const inputRef = useRef();\n  const [letterCount, setLetterCount] = useState(0);\n\n  const setInputHandler = ({ target }) => {\n    setUserInput(target.value.toUpperCase());\n    setInputDuplicateError(false);\n    setWordExistError(false);\n    setIsInValidWord(false);\n  };\n\n  // this checks for duplicates in the userInput\n  function hasDuplicates(array) {\n    return new Set(array).size !== array.length;\n  }\n\n  // add your word / number handler\n  const myChoiceHandler = () => {\n    // check if user input has repeatative letters\n    // console.log(\"The user Input is \" + userInput);\n    hasDuplicates([...userInput]);\n    if (hasDuplicates([...userInput])) {\n      console.log(\"has duplicates\");\n      setInputDuplicateError(true);\n      return;\n    }\n\n    // if the word entered is already entered before then we should get an error\n    if (myChoices !== null && myChoices.includes(userInput)) {\n      console.log(\"Here is the error\");\n      setWordExistError(true);\n      return;\n    }\n\n    // check if this word is valid\n    if (gameType === \"Word\") {\n      if (!rword.words.includes(userInput.toLowerCase())) {\n        setIsInValidWord(true);\n        return;\n      }\n    }\n\n    // after confirming there are no repeatative letters, we can now store the userInputs in myChoices array\n    if (myChoices) localStorage.setObj(\"userInputs\", [...myChoices, userInput]);\n    else localStorage.setObj(\"userInputs\", [userInput]);\n    setMyChoices(localStorage.getObj(\"userInputs\"));\n    setShowUserInputModal(false);\n    setUserInput(\"\");\n    localStorage.setItem(\n      \"attemptsPlayed\",\n      Number(localStorage.getItem(\"attemptsPlayed\")) + 1\n    );\n    setAttemptsPlayed(localStorage.getItem(\"attemptsPlayed\"));\n  };\n\n  useEffect(() => {\n    inputRef.current.focus();\n  }, [inputRef]);\n\n  useEffect(() => {\n    setLetterCount(userInput.length);\n  }, [userInput]);\n\n  // word is input and enter clicked\n  const enterPressedHandler = (event) => {\n    const code = event.keyCode || event.which;\n    if (code === 13 && event.target.value.length === Number(letters)) {\n      //13 is the enter keycode\n      // console.log(\"Confirm can be entered now\");\n      myChoiceHandler();\n    }\n  };\n\n  return (\n    <Modal>\n      <Modal.Overlay\n        onClick={() => {\n          setShowUserInputModal(false);\n          setUserInput(\"\");\n          setInputDuplicateError(false);\n          setWordExistError(false);\n          setIsInValidWord(false);\n        }}\n      />\n      <Modal.Content>\n        <UserInputModal>\n          <UserInputModal.Frame>\n            <UserInputModal.Logo src={logo} alt=\"Logo\" />\n            <UserInputModal.MainText>\n              Please input your {Number(attemptsPlayed) === 0 && \"first\"}{\" \"}\n              <span style={{ color: \"#ffa62b\" }}>{gameType}</span>\n            </UserInputModal.MainText>\n\n            <UserInputModal.SubText>\n              Attempt&nbsp;{\" \"}\n              <span style={{ color: \"#ffa62b\" }}>\n                {myChoices && myChoices.length + 1}{\" \"}\n              </span>\n              /&nbsp;\n              {attempts}\n            </UserInputModal.SubText>\n          </UserInputModal.Frame>\n          {inputDuplicatesError && (\n            <UserInputModal.SubText error>\n              Letters should not be repeated\n            </UserInputModal.SubText>\n          )}\n          {wordExistError && (\n            <UserInputModal.SubText error>\n              {userInput.toUpperCase()} already exists\n            </UserInputModal.SubText>\n          )}\n          {isInValidWord && (\n            <UserInputModal.SubText error>\n              {userInput.toUpperCase()} is invalid word\n            </UserInputModal.SubText>\n          )}\n          {/* <UserInputModal.Input\n            type=\"text\"\n            ref={inputRef}\n            value={userInput}\n            onChange={({ target }) => setUserInput(target.value)}\n          /> */}\n          {/* this html input is directly used because, in styled components, I didnt find a good way to write inputRef */}\n          <input\n            ref={inputRef}\n            value={userInput}\n            onChange={setInputHandler}\n            style={inputStyles}\n            maxLength={letters}\n            type={gameType === \"Number\" ? \"number\" : \"text\"}\n            onKeyPress={enterPressedHandler} // if enter is clicked then confirm will be clicked\n          />\n\n          <UserInputModal.Input>\n            {\" \"}\n            {letterCount}/{letters}\n          </UserInputModal.Input>\n          <UserInputModal.ButtonContainer>\n            <UserInputModal.Button\n              disabled={Number(letterCount) !== Number(letters)}\n              onClick={myChoiceHandler}\n            >\n              {\" \"}\n              Confirm{\" \"}\n            </UserInputModal.Button>\n            <UserInputModal.Button\n              onClick={() => {\n                setShowUserInputModal(false);\n                setUserInput(\"\");\n                setInputDuplicateError(false);\n                setWordExistError(false);\n                setIsInValidWord(false);\n              }}\n            >\n              {\" \"}\n              Cancel{\" \"}\n            </UserInputModal.Button>\n          </UserInputModal.ButtonContainer>\n        </UserInputModal>\n      </Modal.Content>\n    </Modal>\n  );\n}\nexport default Radium(UserInputModalContainer);\n","import React, { useContext } from \"react\";\nimport { GameContext } from \"../App\";\nimport { Modal, WonLostModal } from \"../components\";\n// import { useHistory } from \"react-router-dom\";\n\nexport default function WonLostModalContainer() {\n  const { setShowWonLostModal, wonTheGame, gameType, hiddenWord } = useContext(\n    GameContext\n  );\n\n  return (\n    <Modal>\n      <Modal.Overlay\n        onClick={() => {\n          setShowWonLostModal(false);\n        }}\n      />\n\n      <Modal.Content>\n        <WonLostModal>\n          {wonTheGame ? (\n            <WonLostModal.MainText>\n              You're awesome{\" \"}\n              <span aria-label=\"cool\" role=\"img\">\n                😎\n              </span>{\" \"}\n              You guess it right and won the game{\" \"}\n              <span aria-label=\"smile\" role=\"img\">\n                😀\n              </span>\n            </WonLostModal.MainText>\n          ) : (\n            <WonLostModal.MainText>\n              You're out of attempts{\" \"}\n              <span aria-label=\"cry\" role=\"img\">\n                🥲\n              </span>{\" \"}\n              Better luck next time{\" \"}\n              <span aria-label=\"smile\" role=\"img\">\n                😀\n              </span>\n            </WonLostModal.MainText>\n          )}\n          <WonLostModal.SubText>The {gameType} is</WonLostModal.SubText>\n          <WonLostModal.SubText result=\"true\">\n            {hiddenWord.toUpperCase()}\n          </WonLostModal.SubText>\n          <WonLostModal.ButtonContainer>\n            <WonLostModal.Button onClick={() => setShowWonLostModal(false)}>\n              OK\n            </WonLostModal.Button>\n          </WonLostModal.ButtonContainer>\n        </WonLostModal>\n      </Modal.Content>\n    </Modal>\n  );\n}\n","import React, { useState, createContext } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport GamePlayContainer from \"./containers/gamePlay\";\nimport GameSelectionContainer from \"./containers/gameSelection\";\nimport HomeContainer from \"./containers/home\";\nimport QuitRevealModalContainer from \"./containers/quitRevealModal\";\nimport RulesMoalContainer from \"./containers/rulesModal\";\nimport UserInputModalContainer from \"./containers/userInputModal\";\nimport WonLostModalContainer from \"./containers/wonLostModal\";\n// import { rword } from \"rword\";\n// import GameLogic from \"./gameLogic\";\nimport * as GAME from \"./helpers/constants\";\n\nexport const GameContext = createContext();\n\n// local storage store and get arrays\nStorage.prototype.setObj = function (key, obj) {\n  return this.setItem(key, JSON.stringify(obj));\n};\nStorage.prototype.getObj = function (key) {\n  return JSON.parse(this.getItem(key));\n};\n\n// set in local storage and then update the state through local storage. In this way the state wont be lost\nfunction App() {\n  const [showRulesModal, setShowRulesModal] = useState(false); // modal for rules\n  // word or number\n  const [gameType, setGameType] = useState(\n    localStorage.getItem(GAME.GAME_TYPE)\n  );\n  // tells easy / medium / hard\n  const [level, setLevel] = useState(localStorage.getItem(GAME.LEVEL));\n  // tells the selected letters (3 or 4 or 5 o 6)\n  const [letters, setLetters] = useState(localStorage.getItem(GAME.LETTERS));\n  const [showQuitRevealModal, setShowQuitRevealModal] = useState(false);\n  const [showRevealModal, setShowRevealModal] = useState(false);\n  // reveal the answer in gamePlay container\n  const [revealIt, setRevealIt] = useState(false);\n  const [showUserInputModal, setShowUserInputModal] = useState(false);\n  // input value guessed word / number\n  const [userInput, setUserInput] = useState(\"\");\n  // guessed word / number array\n  const [myChoices, setMyChoices] = useState(localStorage.getObj(\"userInputs\"));\n  // const [myChoices, setMyChoices] = useState([]);\n  // newGame is used to refresh the GamePlay page\n  const [newGame, setNewGame] = useState(false);\n\n  // check if the word is valid before it's accepted to the list of user entered words. This is not applicable to numbers\n  const [isInValidWord, setIsInValidWord] = useState(false);\n\n  const [hiddenWord, setHiddenWord] = useState(\n    localStorage.getItem(\"hiddenWord\")\n  );\n\n  const [inputDuplicatesError, setInputDuplicateError] = useState(false);\n\n  const [wordExistError, setWordExistError] = useState(false);\n\n  const [gameOver, setGameOver] = useState(false);\n\n  const [attempts, setAttempts] = useState(localStorage.getItem(\"attempts\"));\n\n  const [attemptsPlayed, setAttemptsPlayed] = useState(\n    localStorage.getItem(\"attemptsPlayed\")\n  );\n\n  const [showWonLostModal, setShowWonLostModal] = useState(false);\n  const [wonTheGame, setWonTheGame] = useState(false); // true -> won, false -> lost . Called in\n\n  // clicked elements array\n  const [hintLetters, setHintLetters] = useState([]);\n\n  // these context values will be passed to all the required components as props\n  const contextValues = {\n    hintLetters,\n    setHintLetters,\n    isInValidWord,\n    setIsInValidWord,\n    attemptsPlayed,\n    setAttemptsPlayed,\n    gameOver,\n    setGameOver,\n    wonTheGame,\n    setWonTheGame,\n    attempts,\n    setAttempts,\n    wordExistError,\n    setWordExistError,\n    inputDuplicatesError,\n    setInputDuplicateError,\n    hiddenWord,\n    setHiddenWord,\n    newGame,\n    setNewGame,\n    myChoices,\n    setMyChoices,\n    userInput,\n    setUserInput,\n    revealIt,\n    setRevealIt,\n    showWonLostModal,\n    setShowWonLostModal,\n    showQuitRevealModal,\n    showUserInputModal,\n    setShowUserInputModal,\n    showRulesModal,\n    showRevealModal,\n    setShowRulesModal,\n    setShowRevealModal,\n    gameType,\n    setGameType,\n    level,\n    setLevel,\n    letters,\n    setLetters,\n    setShowQuitRevealModal,\n  };\n\n  return (\n    // Game context provides all the contexts necessary for all the components and any of the comps can use the required context values\n    <GameContext.Provider value={{ ...contextValues }}>\n      {/* Routes */}\n      <Router>\n        {/* modals here */}\n        {showRulesModal && <RulesMoalContainer />}\n        {showQuitRevealModal && <QuitRevealModalContainer />}\n        {showRevealModal && <QuitRevealModalContainer />}\n        {showUserInputModal && <UserInputModalContainer />}\n        {showWonLostModal && <WonLostModalContainer />}\n\n        <Route path=\"/\" exact component={HomeContainer} />\n        <Route path=\"/select\" component={GameSelectionContainer} />\n        <Route path=\"/play\" component={GamePlayContainer} />\n      </Router>\n    </GameContext.Provider>\n  );\n}\n\nexport default App;\n","import { createGlobalStyle } from \"styled-components\";\n\nexport const GlobalStyles = createGlobalStyle`\n\nhtml,body{\n    font-family:'Helvatica Neue', Helvetica, Arial, sans-serif;\n    -webkit-font-smoothing:antialiased;\n    -moz-font-smoothing:grayscale;\n    background-color:#14274E;\n    color: #333333;\n    font-size:16px; \n\n}\n`;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { GlobalStyles } from \"./global-styles\";\nimport { StyleRoot } from \"radium\";\n\nReactDOM.render(\n  // Our app needs to be wrapped in sytle root since we are using radium package for our media queries in userInputModal\n  <StyleRoot>\n    <GlobalStyles />\n    <App />\n  </StyleRoot>,\n\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}